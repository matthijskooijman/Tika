# This is the main slapd configuration file. See slapd.conf(5) for more
# info on the configuration options.
#
# This file configures slapd to run a fairly simple database, with nothing
# fancy.

#######################################################################
# Global Directives:

# Schema and objectClass definitions
include         /etc/ldap/schema/core.schema
include         /etc/ldap/schema/cosine.schema
include         /etc/ldap/schema/nis.schema
include         /etc/ldap/schema/inetorgperson.schema
include         /etc/ldap/schema/maroesja.schema

# Where the pid file is put. The init.d script
# will not stop the server if you change this.
pidfile         /var/run/slapd/slapd.pid

# List of arguments that were passed to the server
argsfile        /var/run/slapd/slapd.args

# Read slapd.conf(5) for possible values
# loglevel is really a mask of topics, not an incremental level. none actually
# means to show general messages, but no specific topics.
loglevel        none

# Where the dynamically loaded modules are stored
modulepath      /usr/lib/ldap
moduleload      back_hdb
moduleload      unique

# The maximum number of entries that is returned for a search operation
sizelimit 500

# The tool-threads parameter sets the actual amount of cpu's that is used
# for indexing.
tool-threads 1

#######################################################################
database        hdb

# The base of your directory in database #1
suffix          "dc=tika,dc=stderr,dc=nl"

# Where the database file are physically stored for database #1
directory       "/data/db/ldap"

# For the Debian package we use 2MB as default but be sure to update this
# value if you have plenty of RAM
dbconfig set_cachesize 0 2097152 0

# Sven Hartge reported that he had to set this value incredibly high
# to get slapd running at all. See http://bugs.debian.org/303057 for more
# information.

# Number of objects that can be locked at the same time.
dbconfig set_lk_max_objects 1500
# Number of locks (both requested and granted)
dbconfig set_lk_max_locks 1500
# Number of lockers
dbconfig set_lk_max_lockers 1500

# Indexing options for database #1
# Note that indexes always contain a single attribute, the grouping of
# multiple attributes on a single line is just cosmetic.
index           objectClass eq
index           cn eq
index           member,memberUid eq
index           mail,mailAlternateAddress eq
index           uid,uidNumber,gidNumber eq
index           host eq

# Save the time that the entry gets modified, for database #1
lastmod         on

# Checkpoint the BerkeleyDB database periodically in case of system
# failure and to speed slapd shutdown.
checkpoint      512 30

# These access lines apply to database #1 only

# The userPassword by default can be changed
# by the entry owning it if they are authenticated.
# Others should not be able to see it, except the
# admin entry below
access to attrs=userPassword
        by dn="cn=admin,dc=tika,dc=stderr,dc=nl" write
        by anonymous auth
        by self write
        by * none

# The shadowLastChange by default can be changed
# by the entry owning it if they are authenticated.
# Others should be able to see it, since checks are done by nslcd
# unauthenticated.
access to attrs=shadowLastChange
        by dn="cn=admin,dc=tika,dc=stderr,dc=nl" write
        by self write
        by * read

# Ensure read access to the base for things like
# supportedSASLMechanisms.  Without this you may
# have problems with SASL not knowing what
# mechanisms are available and the like.
# Note that this is covered by the 'access to *'
# ACL below too but if you change that as people
# are wont to do you'll still need this if you
# want SASL (and possible other things) to work
# happily.
access to dn.base="" by * read

# The admin dn has full write access, everyone else
# can read everything.
access to *
        by dn="cn=admin,dc=tika,dc=stderr,dc=nl" write
        by * read

overlay unique
# Make sure uniqueIdentifiers are globally unique
unique_uri ldap:///?uniqueIdentifier?sub?
# Make sure a mail address routes uniquely
# TODO: This does not catch duplicates between mail and mailAlternateAddress.
# Perhaps mailAlternateAddress should be dropped (though that removes the
# concept of "primary e-mail", which is probably still relevant now).
unique_uri ldap:///?mail,mailAlternateAddress?sub?(|(objectClass=maroesjaMailIdentity)(objectClass=maroesjaMailGroup))
# Make sure usernames and uidNumbers are unique
unique_uri ldap:///?uid,uidNumber?sub?(objectClass=maroesjaSystemIdentity)
# Make sure groupnames and gidNumbers are unique
unique_uri ldap:///?cn,gidNumber?sub?(objectClass=maroesjaSystemGroup)
# Make sure maroesja usernames are unique
unique_uri ldap:///?uid?sub?(objectClass=maroesjaMaroesjaIdentity)
# Make sure jabber usernames are unique
unique_uri ldap:///?jabberID?sub?(objectClass=maroesjaJabberIdentity)
# Make sure domain names are unique
unique_uri ldap:///?domainName?sub?(objectClass=maroesjaDomain)

# vim:set expandtab sts=8 sw=8:
