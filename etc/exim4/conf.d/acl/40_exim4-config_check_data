
### acl/40_exim4-config_check_data
#################################

# This ACL is used after the contents of a message have been received. This
# is the ACL in which you can test a message's headers or body, and in
# particular, this is where you can invoke external virus or spam scanners.

acl_check_data:

  # Deny if the message contains an overlong line.  Per the standards
  # we should never receive one such via SMTP.
  #
  deny
    condition  = ${if > {$max_received_linelength}{998}}
    message    = maximum allowed line length is 998 octets, \
                       got $max_received_linelength
  .endif

  # Deny unless the address list headers are syntactically correct.
  #
  # This might reject legitimate mail...
  deny
    message = Message headers fail syntax check
    !verify = header_syntax
    message = header syntax
    log_message = header syntax ($acl_verify_message)

  # Entries below this all refer to the spamchecking (so add new entries above).


  # Don't do spamchecking for a list of "trusted" hosts (we know these hosts to
  # not be spammers, so if we still receive spam from them, it's too late to
  # reject it).
  accept
    hosts = +dont_reject_spam_hosts
    add_header = :at_start:X-Preliminary-Spam-Score: Not scanned; message from trusted host

  # Don't do spamchecking for big messages, they're unlikely to be spam and
  # cost a lot of resources.
  accept
    condition = ${if >{$message_size}{1000k}}
    add_header = :at_start:X-Preliminary-Spam-Score: Not scanned; message too big

  # Use spamassassin to scan messages so we can reject them at SMTP time. This
  # entry just does the check and adds the header, the next entry denies the
  # message if needed.
  # We pass a username of "preliminary" to make spamassassin use specific settings
  # This is intentionally also ran on outgoing email, so spamassassin can
  # apply autowhitelisting based on outgoing email.
  warn
    spam = preliminary:true
    add_header = :at_start:X-Preliminary-Spam-Score: $spam_score ($spam_bar)

  # Deny messages that are really obvious spam
  deny
    condition = ${if >{$spam_score_int}{60}}
    message = Message was classified as spam

  # Accept any other messages
  accept

# vim: set sts=2 expandtab sw=2 ai:
