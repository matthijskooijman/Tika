# This is the right place to customize your installation of SpamAssassin.
#
# See 'perldoc Mail::SpamAssassin::Conf' for details of what can be
# tweaked.
#
# Only a small subset of options are listed below
#
###########################################################################

# Load user-specific preferences from Mysql, so they can be configured using Roundcube
user_scores_dsn                  DBI:mysql:spamassassin:db.local
user_scores_sql_username         spamassassin
user_scores_sql_custom_query     SELECT preference, value FROM _TABLE_ WHERE username = _USERNAME_ OR username = '$GLOBAL' ORDER BY username ASC
# Password is stored in a separate file, so it can be kept out of version
# control

# Do modify the message body, just add some headers
report_safe 0
add_header all Report _REPORT_\nBayes _TOKENSUMMARY_\n- top spam tokens: _SPAMMYTOKENS(4,short)_\n- top ham tokens: _HAMMYTOKENS(4,short)_

# Make languages and locales unlikely to be used in .nl suspicious
ok_languages nl en de fr
ok_locales en

#   Set which networks or hosts are considered 'trusted' by your mail
#   server (i.e. not spammers)
#
trusted_networks 83.96.176.0/24 # relay*.dds.nl
trusted_networks 91.142.252.0/24 # mx*.dds.nl
trusted_networks 149.210.168.72 # spullenmannen.nl
trusted_networks 37.97.157.192 # koppelting.nl
trusted_networks 10.42.0.0/24 # Tika containers

internal_networks 10.42.0.0/24 # Tika containers

#   Set file-locking method (flock is not safe over NFS, but is faster)
#
# lock_method flock


# Use Bayesian classifier
use_bayes 1
use_bayes_rules 1

#   Use a global Bayes database, shared among all users. Note that this is
#   (part of) a filename, the actual files to store data in will be generated
#   by appending "_seen" and "_toks" to this string.
#
#   The directory specified in this path (so "spamassassin", not "bayes")
#   should be precreated and be writable to the user running spamd (nobody).
bayes_path /data/mail/spamassassin/bayes

# Dovecot-antispam uses report on spam messages, so make sure they get reported
# to e.g. pyzor and learned by bayes. Ham messages are only learned, since at
# least pyzor does not support anonymous revoking anyway. (Also, there is no
# bayes_learn_during_revoke).
bayes_learn_during_report 1

# Learn messages just to the journal, without syncing the token files.
# Spamassassin will opportunistically sync the journal regularly. This slightly
# speeds up the learning process and reduces contention on the token files.
bayes_learn_to_journal 1

#   Bayesian classifier auto-learning (default: 1)
#   Disabled globally, but enabled in userprefs for preliminary scanning
bayes_auto_learn 0


#   Set headers which may provide inappropriate cues to the Bayesian
#   classifier
#
# Ignore spam headers from upstream mail servers
bayes_ignore_header X-Original-Spam-Status
bayes_ignore_header X-Original-Spam-Checker-Version
bayes_ignore_header X-Original-Spam-Report
bayes_ignore_header X-Original-Spam-Level
bayes_ignore_header X-Preliminary-Spam-Score

# Reduce negative score for envelope matching received headers, this seems to
# match spam more often than ham anyway.
score RP_MATCHES_RCVD -0.1

# Reduce negative score for unwanted languages. The default 2.8 is a bit much.
score UNWANTED_LANGUAGE_BODY 1.5

# Reduce negative score for word followed by hex string. The default 3.0 is a bit much.
score HEXHASH_WORD 0.5

# Reduce negative score for word "Dear ...". The default 2.0 is a bit much.
score DEAR_SOMETHING 0.8

# Disable suspicious TLD check, this includes .space
score FROM_SUSPICIOUS_NTLD_FP 0
score FROM_SUSPICIOUS_NTLD 0
score PDS_OTHER_BAD_TLD 0

use_pyzor 1
pyzor_options --homedir /data/mail/spamassassin/pyzor

#   Some shortcircuiting, if the plugin is enabled
# 
ifplugin Mail::SpamAssassin::Plugin::Shortcircuit
#
#   default: strongly-whitelisted mails are *really* whitelisted now, if the
#   shortcircuiting plugin is active, causing early exit to save CPU load.
#   Uncomment to turn this on
#
# shortcircuit USER_IN_WHITELIST       on
# shortcircuit USER_IN_DEF_WHITELIST   on
# shortcircuit USER_IN_ALL_SPAM_TO     on
# shortcircuit SUBJECT_IN_WHITELIST    on

#   the opposite; blacklisted mails can also save CPU
#
# shortcircuit USER_IN_BLACKLIST       on
# shortcircuit USER_IN_BLACKLIST_TO    on
# shortcircuit SUBJECT_IN_BLACKLIST    on

#   if you have taken the time to correctly specify your "trusted_networks",
#   this is another good way to save CPU
#
# shortcircuit ALL_TRUSTED             on

#   and a well-trained bayes DB can save running rules, too
#
# shortcircuit BAYES_99                spam
# shortcircuit BAYES_00                ham

endif # Mail::SpamAssassin::Plugin::Shortcircuit

# 20190108 bpeschier Use localhost as DNS so we don't end up in blocklists

dns_available yes
dns_server 127.0.0.1

# 20190318 matthijs Disable razor, it was giving unexplained failures in the
# log (I also deleted the conf file in an attempt to regenerate it with
# razor-admin, but that didn't seem to work either).
use_razor2 0
# razor_config /data/mail/spamassassin/razor/razor-agent.conf

# 20211102 matthijs Use TxRep to include scores of previous messages
# from the same sender (and/or (DKIM) domain and/or helo and/or ip) in
# new messages, to even out scores (should prevent known good senders
# from being tripped on a one-off suspicious message). Also allows
# giving slight bonuses to addresses that receive mail from us, and
# applies significant bonus/penalty when re-learning ham or spam.
# Note quite a bit of these config entries use "awl", since txrep was created
# as a fork of the AWL plugin, without properly changing everything (still also
# sharing some code).
# Note that putting the loadplugin for TxRep here instead of in v341.pre did
# not work, it probably needs to be a in a .pre file.
use_txrep 1

# On every outgoing message, give this bonus to the recipients. This works by
# modifying the average score that txrep keeps for the recipient in the same
# way as an incoming mail with a negative score with the below value. Note
# that this only affects the "email" score, not the other (email+ip, domain,
# etc.) scores, so the effect might be somewhat limited (and this has no
# effect when there is a DKIM or SPF check, since then the email-only check is
# not done at all).
# This also requires that outgoing emails pass through spamassassin at some
# point, and only involve mailservers in the internal_networks.
txrep_whitelist_out 10

# Store TxRep prefs in MySQL. This should be faster, but also works around a
# bug where the file-based backend location cannot be changed (and we run
# without a homedir, so that breaks):
# https://bz.apache.org/SpamAssassin/show_bug.cgi?id=7383
txrep_factory                     Mail::SpamAssassin::SQLBasedAddrList
user_awl_dsn                      DBI:mysql:spamassassin:db.local
# MysSQL username
user_awl_sql_username             spamassassin
# Username to use inside the database data. Override it here to get one global
# txrep repository, rather than per-user, hopefully that allows sharing
# reputations and makes results better than per-user reputations.
user_awl_sql_override_username    $GLOBAL
# Password is stored in a separate file, so it can be kept out of version
# control
