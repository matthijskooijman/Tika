# This is the right place to customize your installation of SpamAssassin.
#
# See 'perldoc Mail::SpamAssassin::Conf' for details of what can be
# tweaked.
#
# Only a small subset of options are listed below
#
###########################################################################

#   Add *****SPAM***** to the Subject header of spam e-mails
#
# rewrite_header Subject *****SPAM*****


#   Save spam messages as a message/rfc822 MIME attachment instead of
#   modifying the original message (0: off, 2: use text/plain instead)
#
# report_safe 1


#   Set which networks or hosts are considered 'trusted' by your mail
#   server (i.e. not spammers)
#
trusted_networks 83.96.176.0/24 # relay*.dds.nl
trusted_networks 91.142.252.0/24 # mx*.dds.nl
trusted_networks 149.210.168.72 # spullenmannen.nl
trusted_networks 37.97.157.192 # koppelting.nl
trusted_networks 10.42.0.0/24 # Tika containers

#   Set file-locking method (flock is not safe over NFS, but is faster)
#
# lock_method flock


#   Set the threshold at which a message is considered spam (default: 5.0)
#
# required_score 5.0


#   Use Bayesian classifier (default: 1)
#
# use_bayes 1


#   Use a global Bayes database, shared among all users. Note that this is
#   (part of) a filename, the actual files to store data in will be generated
#   by appending "_seen" and "_toks" to this string.
#
#   The directory specified in this path (so "spamassassin", not "bayes")
#   should be precreated and be writable to the user running spamd (nobody).
bayes_path /data/mail/spamassassin/bayes

# Dovecot-antispam uses report on spam messages, so make sure they get reported
# to e.g. pyzor and learned by bayes. Ham messages are only learned, since at
# least pyzor does not support anonymous revoking anyway. (Also, there is no
# bayes_learn_during_revoke).
bayes_learn_during_report 1

# Learn messages just to the journal, without syncing the token files.
# Spamassassin will opportunistically sync the journal regularly. This slightly
# speeds up the learning process and reduces contention on the token files.
bayes_learn_to_journal 1

#   Bayesian classifier auto-learning (default: 1)
#
# bayes_auto_learn 1


#   Set headers which may provide inappropriate cues to the Bayesian
#   classifier
#
# Ignore spam headers from upstream mail servers
bayes_ignore_header X-Original-Spam-Status
bayes_ignore_header X-Original-Spam-Checker-Version
bayes_ignore_header X-Original-Spam-Report
bayes_ignore_header X-Original-Spam-Level
bayes_ignore_header X-Preliminary-Spam-Score

# Reduce negative score for envelope matching received headers, this seems to
# match spam more often than ham anyway.
score RP_MATCHES_RCVD -0.1

# Reduce negative score for unwanted languages. The default 2.8 is a bit much.
score UNWANTED_LANGUAGE_BODY 1.5

pyzor_options --homedir /data/mail/spamassassin/pyzor

#   Some shortcircuiting, if the plugin is enabled
# 
ifplugin Mail::SpamAssassin::Plugin::Shortcircuit
#
#   default: strongly-whitelisted mails are *really* whitelisted now, if the
#   shortcircuiting plugin is active, causing early exit to save CPU load.
#   Uncomment to turn this on
#
# shortcircuit USER_IN_WHITELIST       on
# shortcircuit USER_IN_DEF_WHITELIST   on
# shortcircuit USER_IN_ALL_SPAM_TO     on
# shortcircuit SUBJECT_IN_WHITELIST    on

#   the opposite; blacklisted mails can also save CPU
#
# shortcircuit USER_IN_BLACKLIST       on
# shortcircuit USER_IN_BLACKLIST_TO    on
# shortcircuit SUBJECT_IN_BLACKLIST    on

#   if you have taken the time to correctly specify your "trusted_networks",
#   this is another good way to save CPU
#
# shortcircuit ALL_TRUSTED             on

#   and a well-trained bayes DB can save running rules, too
#
# shortcircuit BAYES_99                spam
# shortcircuit BAYES_00                ham

endif # Mail::SpamAssassin::Plugin::Shortcircuit

# 20190108 bpeschier Use localhost as DNS so we don't end up in blocklists

dns_available yes
dns_server 127.0.0.1

# 20190318 matthijs Disable razor, it was giving unexplained failures in the
# log (I also deleted the conf file in an attempt to regenerate it with
# razor-admin, but that didn't seem to work either).
#use_razor2 0 # Didn't work, setting score to 0 should also disable a rule
score RAZOR2_CHECK 0
# razor_config /data/mail/spamassassin/razor/razor-agent.conf
