user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;

	# Enable debug output to error.log for this IP
	#debug_connection 84.245.31.20;
}

http {

	##
	# Basic Settings
	##

        # Do data copying for plain files in kernelspace using the sendfile()
        # function and tweak TCP options for better performance.
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;

        # Use a bit hash for mime types
	types_hash_max_size 2048;
	# Load Debian's supplied mime types
	include /etc/nginx/mime.types;
	# And add some of our own
	types {
		text/plain log patch diff;
		text/plain c cc cpp h hpp ino;
		text/plain sh;
	}
	default_type application/octet-stream;

	# Internally redirect to these files when a directory is requested
	index index.html index.htm index.php;

	##
	# Logging Settings
	##

	# Access logs are per server, see below

	#error_log /var/log/nginx/debug.log debug;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;

	# Extract the domain and subdomain (including any subsubdomains)
	# from the server name from the virtual host selected. This does
	# not use the host name provided by the client per se, though.
	map $server_name $domain {
		~(?P<tmp>[^.]+\.[^.]+)$	$tmp;
	}

	map $server_name $subdomain {
		~(?P<tmp>[^.]+)\.[^.]+\.[^.]+$	$tmp;
	}

	# Let $path_info default to $document_uri, but allow overriding
	# it with set directives.
	map $document_uri  $path_info {
		default $document_uri;
	}

	# Supply a default root, depending on the server name of the
	# virtual host selected. Virtual hosts can still override this
	# by providing a root directive themselves.
	root /data/www/$domain/htdocs/$subdomain;

	# This is the default format for lighttpd. It equals the
	# combined format, but with the second field (which isn't
	# supported by lighttpd or nginx anyway) replaced with the host
	# value.
	log_format lighttpd '$remote_addr $host $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';

	# Note that because we use variables in the access log, nginx
	# will refuse to write the access log if the document root does
	# not exist (so always make sure there is one)
	access_log /data/www/logs/$domain/$subdomain/access.log lighttpd;
	
	# Because we use variables in the log filename, nginx reopens
	# the log on every request by default. By keeping a cache of
	# open file descriptors, it can still reuse them anyway.
	open_log_file_cache max=100;

	# Secure nginx SSL configuration, prefering 256bit key exchanges
	# over almost everything else except that GCM always wins.
	ssl_dhparam         ssl/dhparam.pem;
	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2; # default on newer versions
	ssl_ciphers         ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK;
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 10m;
}

# vim: set ts=8 sts=8 sw=8 noexpandtab filetype=conf:
